/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package budget;

import com.toedter.calendar.IDateEditor;  
import com.toedter.calendar.JTextFieldDateEditor;
import com.toedter.calendar.JCalendar;
import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.demo.JCalendarDemo;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ScrollPaneConstants;
import javax.swing.table.TableModel;
import org.jfree.chart.*;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCXYDataset;



/**
 *
 * @author vhardt
 */
public class GUIBudget extends javax.swing.JFrame {

    /**
     * Creates new form GUIBudget
     */
    public GUIBudget() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createPerson = new javax.swing.JDialog();
        jDialog1 = new javax.swing.JDialog();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        pnlPerAdd = new javax.swing.JPanel();
        pnlPerDel = new javax.swing.JPanel();
        pnlAufgabAdd = new javax.swing.JPanel();
        pnlAufgabDel = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        pnlGeldfluss = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        cmbxName = new javax.swing.JComboBox();
        lblBetrag = new javax.swing.JLabel();
        fldBetrag = new javax.swing.JTextField();
        lblEuro = new javax.swing.JLabel();
        lblDatum = new javax.swing.JLabel();
        lblGrund = new javax.swing.JLabel();
        cmbxGrund = new javax.swing.JComboBox();
        lblCommentar = new javax.swing.JLabel();
        scrpanCommentar = new javax.swing.JScrollPane();
        taCommentar = new javax.swing.JTextArea();
        btnSpeichern = new javax.swing.JButton();
        txtErgebnis = new javax.swing.JTextField();
        mydatechooser = new com.toedter.calendar.JDateChooser();
        rbtnAusgabe = new javax.swing.JRadioButton();
        rbtnEinnahme = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        pnlPersonen = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listName = new javax.swing.JList();
        btnNameDelete = new javax.swing.JButton();
        txtFldNameErgebn = new javax.swing.JTextField();
        lblNameInput = new javax.swing.JLabel();
        txtFldName = new javax.swing.JTextField();
        btnNameOK = new javax.swing.JButton();
        txtFldNameResult = new javax.swing.JTextField();
        pnlGeldgruppen = new javax.swing.JPanel();
        btnGeldGruppeLoeschen = new javax.swing.JButton();
        btnGeldGruppeEinfuegen = new javax.swing.JButton();
        rbtnAusgabeVerwalt = new javax.swing.JRadioButton();
        rbtnEinnahmeVerwalt = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstGeldgruppe = new javax.swing.JList();
        txtfldGeldGruppeInfo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtfldGeldgruppeInfo = new javax.swing.JTextField();
        txtfldGeldgruppeInsert = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlGrafik = new javax.swing.JPanel();
        btnCraphRenew = new javax.swing.JButton();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FIO = new javax.swing.JTable();
        btnTableAktual = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jmiNameDelete = new javax.swing.JMenuItem();
        jmiNameInsert = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmiAusgabeDelete = new javax.swing.JMenuItem();
        jmiAusgabeInsert = new javax.swing.JMenuItem();

        createPerson.setMinimumSize(new java.awt.Dimension(400, 300));

        javax.swing.GroupLayout createPersonLayout = new javax.swing.GroupLayout(createPerson.getContentPane());
        createPerson.getContentPane().setLayout(createPersonLayout);
        createPersonLayout.setHorizontalGroup(
            createPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );
        createPersonLayout.setVerticalGroup(
            createPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 326, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlPerAddLayout = new javax.swing.GroupLayout(pnlPerAdd);
        pnlPerAdd.setLayout(pnlPerAddLayout);
        pnlPerAddLayout.setHorizontalGroup(
            pnlPerAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        pnlPerAddLayout.setVerticalGroup(
            pnlPerAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Person hinzufügen", pnlPerAdd);

        javax.swing.GroupLayout pnlPerDelLayout = new javax.swing.GroupLayout(pnlPerDel);
        pnlPerDel.setLayout(pnlPerDelLayout);
        pnlPerDelLayout.setHorizontalGroup(
            pnlPerDelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        pnlPerDelLayout.setVerticalGroup(
            pnlPerDelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Person löschen", pnlPerDel);

        javax.swing.GroupLayout pnlAufgabAddLayout = new javax.swing.GroupLayout(pnlAufgabAdd);
        pnlAufgabAdd.setLayout(pnlAufgabAddLayout);
        pnlAufgabAddLayout.setHorizontalGroup(
            pnlAufgabAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        pnlAufgabAddLayout.setVerticalGroup(
            pnlAufgabAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Ausgabe hinzufügen", pnlAufgabAdd);

        javax.swing.GroupLayout pnlAufgabDelLayout = new javax.swing.GroupLayout(pnlAufgabDel);
        pnlAufgabDel.setLayout(pnlAufgabDelLayout);
        pnlAufgabDelLayout.setHorizontalGroup(
            pnlAufgabDelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        pnlAufgabDelLayout.setVerticalGroup(
            pnlAufgabDelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Ausgabe löshen", pnlAufgabDel);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane3.setPreferredSize(new java.awt.Dimension(323, 529));

        pnlGeldfluss.setBorder(javax.swing.BorderFactory.createTitledBorder("Control"));
        pnlGeldfluss.setToolTipText("");

        lblName.setText("Wählen Sie einen Namen aus:");

        try {
            Connection con = SQLiteConnection.getConnection();
            ComboBoxModel cbmname =new MyComboBoxModelName(con, "SQLiteProbe");
            cmbxName.setModel(cbmname);
        } catch (SQLException ex) {
            Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
        }

        lblBetrag.setText("Geben Sie einen Betrag ein:");

        lblEuro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEuro.setText("€");

        lblDatum.setText("Wann wurde es fällig?");

        lblGrund.setText("Ausgabe / Einnahme :");

        try {
            Connection con = SQLiteConnection.getConnection();
            ComboBoxModel cbmGrund =new MyComboBoxModelGrund(con, "SQLiteProbe");
            cmbxGrund.setModel(cbmGrund);
        } catch (SQLException ex) {
            Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
        };

        lblCommentar.setText("Ihr Kommentar:");

        taCommentar.setColumns(20);
        taCommentar.setRows(5);
        scrpanCommentar.setViewportView(taCommentar);

        btnSpeichern.setText("Datensatz speichern");
        btnSpeichern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpeichernActionPerformed(evt);
            }
        });

        txtErgebnis.setEditable(false);

        buttonGroup1.add(rbtnAusgabe);
        rbtnAusgabe.setForeground(new java.awt.Color(255, 0, 0));
        rbtnAusgabe.setText("Ausgabe");
        rbtnAusgabe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAusgabeActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnEinnahme);
        rbtnEinnahme.setForeground(new java.awt.Color(51, 102, 0));
        rbtnEinnahme.setText("Einnahme");
        rbtnEinnahme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEinnahmeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlGeldflussLayout = new javax.swing.GroupLayout(pnlGeldfluss);
        pnlGeldfluss.setLayout(pnlGeldflussLayout);
        pnlGeldflussLayout.setHorizontalGroup(
            pnlGeldflussLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeldflussLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(rbtnAusgabe)
                .addGap(42, 42, 42)
                .addComponent(rbtnEinnahme)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlGeldflussLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnSpeichern, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlGeldflussLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeldflussLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fldBetrag)
                    .addComponent(txtErgebnis)
                    .addComponent(cmbxGrund, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbxName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrpanCommentar)
                    .addGroup(pnlGeldflussLayout.createSequentialGroup()
                        .addGroup(pnlGeldflussLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGrund)
                            .addComponent(lblCommentar))
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addComponent(jSeparator2)
                    .addGroup(pnlGeldflussLayout.createSequentialGroup()
                        .addComponent(lblBetrag)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblEuro, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mydatechooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDatum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlGeldflussLayout.setVerticalGroup(
            pnlGeldflussLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeldflussLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeldflussLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnAusgabe)
                    .addComponent(rbtnEinnahme))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlGeldflussLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBetrag)
                    .addComponent(lblEuro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fldBetrag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDatum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mydatechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblGrund)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbxGrund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCommentar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrpanCommentar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btnSpeichern)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtErgebnis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Geldfluss", pnlGeldfluss);

        pnlPersonen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personenverwaltung", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        try {
            Connection con = SQLiteConnection.getConnection();
            ComboBoxModel cbmname =new MyComboBoxModelName(con, "SQLiteProbe");
            listName.setModel(cbmname);
            listName.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
        }
        jScrollPane2.setViewportView(listName);

        btnNameDelete.setText("Auswahl löschen");
        btnNameDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNameDeleteActionPerformed(evt);
            }
        });

        txtFldNameErgebn.setEnabled(false);

        lblNameInput.setText("Neue Name eingeben:");

        txtFldName.setToolTipText("Geben Sie einen Namen, der nicht in der Liste vorkommt");

        btnNameOK.setText("OK");
        btnNameOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNameOKActionPerformed(evt);
            }
        });

        txtFldNameResult.setToolTipText("Ergebniss");
        txtFldNameResult.setEnabled(false);

        javax.swing.GroupLayout pnlPersonenLayout = new javax.swing.GroupLayout(pnlPersonen);
        pnlPersonen.setLayout(pnlPersonenLayout);
        pnlPersonenLayout.setHorizontalGroup(
            pnlPersonenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPersonenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPersonenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPersonenLayout.createSequentialGroup()
                        .addGroup(pnlPersonenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtFldNameResult)
                            .addComponent(txtFldNameErgebn, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPersonenLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(22, 22, 22))
                    .addGroup(pnlPersonenLayout.createSequentialGroup()
                        .addComponent(btnNameDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlPersonenLayout.createSequentialGroup()
                        .addGroup(pnlPersonenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblNameInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                            .addComponent(txtFldName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNameOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlPersonenLayout.setVerticalGroup(
            pnlPersonenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPersonenLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNameDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFldNameErgebn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(lblNameInput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNameOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFldNameResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );

        jTabbedPane3.addTab("Personen", pnlPersonen);
        pnlPersonen.getAccessibleContext().setAccessibleName("Personen");

        pnlGeldgruppen.setBorder(javax.swing.BorderFactory.createTitledBorder("Geldgruppe verwalten"));

        btnGeldGruppeLoeschen.setText("Auswahl löschen");
        btnGeldGruppeLoeschen.setToolTipText("Auswahl löschen");
        btnGeldGruppeLoeschen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeldGruppeLoeschenActionPerformed(evt);
            }
        });

        btnGeldGruppeEinfuegen.setText("OK");
        btnGeldGruppeEinfuegen.setToolTipText("Neue Geldgruppe speichern");
        btnGeldGruppeEinfuegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeldGruppeEinfuegenActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnAusgabeVerwalt);
        rbtnAusgabeVerwalt.setForeground(new java.awt.Color(204, 0, 0));
        rbtnAusgabeVerwalt.setText("Ausgabe");
        rbtnAusgabeVerwalt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAusgabeVerwaltActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbtnEinnahmeVerwalt);
        rbtnEinnahmeVerwalt.setForeground(new java.awt.Color(52, 102, 0));
        rbtnEinnahmeVerwalt.setText("Einnahme");
        rbtnEinnahmeVerwalt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEinnahmeVerwaltActionPerformed(evt);
            }
        });

        lstGeldgruppe.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(lstGeldgruppe);

        txtfldGeldGruppeInfo.setEditable(false);
        txtfldGeldGruppeInfo.setToolTipText("");

        jLabel1.setText("Neue Geldgruppe eingeben:");

        txtfldGeldgruppeInfo.setEditable(false);

        txtfldGeldgruppeInsert.setEditable(false);

        javax.swing.GroupLayout pnlGeldgruppenLayout = new javax.swing.GroupLayout(pnlGeldgruppen);
        pnlGeldgruppen.setLayout(pnlGeldgruppenLayout);
        pnlGeldgruppenLayout.setHorizontalGroup(
            pnlGeldgruppenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeldgruppenLayout.createSequentialGroup()
                .addGroup(pnlGeldgruppenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlGeldgruppenLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(rbtnAusgabeVerwalt)
                        .addGap(44, 44, 44)
                        .addComponent(rbtnEinnahmeVerwalt)
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addGroup(pnlGeldgruppenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlGeldgruppenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtfldGeldgruppeInfo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGeldGruppeEinfuegen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGeldGruppeLoeschen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                            .addComponent(txtfldGeldGruppeInfo)))
                    .addGroup(pnlGeldgruppenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtfldGeldgruppeInsert)))
                .addContainerGap())
        );
        pnlGeldgruppenLayout.setVerticalGroup(
            pnlGeldgruppenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeldgruppenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeldgruppenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnAusgabeVerwalt)
                    .addComponent(rbtnEinnahmeVerwalt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGeldGruppeLoeschen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfldGeldGruppeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfldGeldgruppeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGeldGruppeEinfuegen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfldGeldgruppeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Geldgruppe", pnlGeldgruppen);

        pnlGrafik.setBorder(javax.swing.BorderFactory.createTitledBorder("Gried"));

        btnCraphRenew.setText("Grafik aktualisieren");
        btnCraphRenew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCraphRenewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlGrafikLayout = new javax.swing.GroupLayout(pnlGrafik);
        pnlGrafik.setLayout(pnlGrafikLayout);
        pnlGrafikLayout.setHorizontalGroup(
            pnlGrafikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGrafikLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnCraphRenew, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(154, Short.MAX_VALUE))
        );
        pnlGrafikLayout.setVerticalGroup(
            pnlGrafikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGrafikLayout.createSequentialGroup()
                .addContainerGap(540, Short.MAX_VALUE)
                .addComponent(btnCraphRenew)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Graphik", pnlGrafik);
        pnlGrafik.getAccessibleContext().setAccessibleName("");

        pnlTable.setBorder(javax.swing.BorderFactory.createTitledBorder("Table"));

        FIO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(FIO);

        btnTableAktual.setText("Tabelle aktuallisieren");
        btnTableAktual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTableAktualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTableAktual, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTableAktual)
                .addGap(0, 109, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tabelle", pnlTable);
        pnlTable.getAccessibleContext().setAccessibleName("grid");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jmiNameDelete.setLabel("Person löschen");
        jmiNameDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNameDeleteActionPerformed(evt);
            }
        });
        jMenu2.add(jmiNameDelete);

        jmiNameInsert.setLabel("Person hinzufügen");
        jmiNameInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNameInsertActionPerformed(evt);
            }
        });
        jMenu2.add(jmiNameInsert);
        jMenu2.add(jSeparator1);

        jmiAusgabeDelete.setLabel("Ausgabe löschen");
        jMenu2.add(jmiAusgabeDelete);

        jmiAusgabeInsert.setText("Ausgabe hinzufügen");
        jMenu2.add(jmiAusgabeInsert);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane3.getAccessibleContext().setAccessibleName("Personen verwalten");
        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSpeichernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpeichernActionPerformed
        // TODO add your handling code here:
        String name = (String)cmbxName.getSelectedItem();
        System.out.println(name);
        Calendar cal = mydatechooser.getCalendar();
        try{
            double betrag = Double.parseDouble(fldBetrag.getText());

            String grund = (String)cmbxGrund.getSelectedItem();
//            SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
//            Date date = null;
            /*
            int jahr=Integer.parseInt(fldDatumJahr.getText())-1900;
            int monat=Integer.parseInt(fldDatumMonat.getText())-1;
            int tag=Integer.parseInt(fldDatumTag.getText());
            * */
            int jahr = cal.get(Calendar.YEAR)-1900;
            int monat = cal.get(Calendar.MONTH);
            int tag = cal.get(Calendar.DAY_OF_MONTH);
            java.util.Date utilDate = new java.util.Date(jahr, monat, tag);
            System.out.println("utilDate:" + utilDate);
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            System.out.println("sqlDate:" + sqlDate);
//            Date date1 = new Date(fldDatum.getText());            
            if (name.length() ==0 || betrag <=0 ||grund.length() ==0) {
                txtErgebnis.setText("Tragen Sie in alle Fenstern ein!");
            }
            else {
                try {
//                    SqlBefehl.insert(name, betrag, grund);
                    SqlBefehl.insertMaintable(name, betrag, sqlDate, grund);
                    txtErgebnis.setText("Ihr Datensatz wurde aufgenommen!");
                } catch (SQLException ex) {
                    Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }catch(NumberFormatException ex){
            txtErgebnis.setText("Double ist nicht korrekt!");
        }
//        cmbxName.set;
        fldBetrag.setText("");
//        cmbxGrund.;
        
    }//GEN-LAST:event_btnSpeichernActionPerformed

    private void btnTableAktualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableAktualActionPerformed
        try {
            Connection con = SQLiteConnection.getConnection();
            TableModel mod = new MyTableModel(con, "MAINTABLE");
            
            
            FIO.setModel(mod);
//            jScrollPane1.add(FIO);
            jScrollPane1.add(FIO, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
//        } catch (SQLException ex) {
//            System.out.println(ex);
            txtErgebnis.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnTableAktualActionPerformed

    private void jmiNameDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNameDeleteActionPerformed
                
    }//GEN-LAST:event_jmiNameDeleteActionPerformed

    private void btnNameDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNameDeleteActionPerformed
        if(listName.getSelectedValue() == null){
            txtFldNameErgebn.setText("Auswahl ist leer");
        }
        else{            
            try { 
                Connection con = SQLiteConnection.getConnection();
                SqlBefehl.deleteName((String)listName.getSelectedValue());
                txtFldNameErgebn.setText("Ihr Datensatz wurde aufgenommen!");
                txtFldName.setText("");
                txtFldNameResult.setText("");
                listName.setModel(new MyComboBoxModelName(con, "SQLiteProbe"));
                cmbxName.setModel(new MyComboBoxModelName(con, "SQLiteProbe"));                
            } catch (SQLException ex) {
                Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnNameDeleteActionPerformed

    private void jmiNameInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNameInsertActionPerformed
        createPerson.setVisible(true);
    }//GEN-LAST:event_jmiNameInsertActionPerformed

    private void btnNameOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNameOKActionPerformed
         try {
            Connection con = SQLiteConnection.getConnection();
            MyComboBoxModelName cbm =new MyComboBoxModelName(con, "SQLiteProbe");
            List name2 = Arrays.asList(cbm.names);
            if(name2.contains(txtFldName.getText())){
                txtFldNameResult.setText("\""+txtFldName.getText()+"\" existiert bereits!");
                txtFldName.setText("");
            }
            if(txtFldName.getText().isEmpty()){
                txtFldNameResult.setText("Feld darf nicht leer sein!");
            }
            else{
                try {
                    SqlBefehl.insertName(txtFldName.getText());
                    txtFldNameResult.setText("Ihr Datensatz wurde aufgenommen!");
                    txtFldName.setText("");
                    listName.setModel(new MyComboBoxModelName(con, "SQLiteProbe"));
//                    pnlPersonen.repaint();
                } catch (SQLException ex) {
                    Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
                }
//                listNameExist.setModel(new MyComboBoxModelName(con, "SQLiteProbe"));
                txtFldNameErgebn.setText("");
                cmbxName.setModel(new MyComboBoxModelName(con, "SQLiteProbe"));                
            }
            
              
        } catch (SQLException ex) {
            Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnNameOKActionPerformed

    private void btnCraphRenewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCraphRenewActionPerformed
        try{
            String query = "select  date, betrag, name from MAINTABLE";
            Connection con = SQLiteConnection.getConnection();
            JDBCCategoryDataset dataset = new JDBCCategoryDataset(con, query);
//            JFreeChart chart = ChartFactory.createLineChart("Query Chart", "Datum ", "Betrag", dataset, rootPaneCheckingEnabled, rootPaneCheckingEnabled, rootPaneCheckingEnabled);
            JFreeChart chart = ChartFactory.createLineChart("Query Chart", "Datum ", "Betrag", dataset, PlotOrientation.VERTICAL, rootPaneCheckingEnabled, rootPaneCheckingEnabled, rootPaneCheckingEnabled);
            BarRenderer renderer = null;
            CategoryPlot plot = null;
            renderer = new BarRenderer();
//            ChartUtilities.saveChartAsJPEG(new File("C:/chart.jpg"),chart,400, 300);

//            ChartFrame frame = new ChartFrame("Query Chart", chart);
            ChartPanel frame = new ChartPanel(chart);
            pnlGrafik.add(frame);
            frame.setVisible(true);
            frame.setSize(650, 400);
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnCraphRenewActionPerformed

    private void rbtnAusgabeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAusgabeActionPerformed
        if(rbtnAusgabe.isSelected()){
            lblGrund.setText("Ordnen Sie die Ausgabe ein!");
            pnlGeldfluss.repaint();
            Connection con = SQLiteConnection.getConnection();
            ComboBoxModel cbmGrund;
            try {
                cbmGrund = new MyComboBoxModelGrund(con, "SQLiteProbe");
                cmbxGrund.setModel( cbmGrund );
            } catch (SQLException ex) {
                Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_rbtnAusgabeActionPerformed

    private void rbtnEinnahmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEinnahmeActionPerformed
        if(rbtnEinnahme.isSelected()){
            lblGrund.setText("Ordnen Sie die Einnahme ein!");
            pnlGeldfluss.repaint();
            Connection con = SQLiteConnection.getConnection();
            ComboBoxModel cbmGrund;
            try {
                cbmGrund = new MyComboBoxModelGrund(con, "SQLiteProbe");
                cmbxGrund.setModel( cbmGrund );
            } catch (SQLException ex) {
                Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_rbtnEinnahmeActionPerformed

    private void rbtnAusgabeVerwaltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAusgabeVerwaltActionPerformed
        if(rbtnAusgabeVerwalt.isSelected()){
            txtfldGeldgruppeInsert.setEditable(true);
            Connection con = SQLiteConnection.getConnection();            
            try {                
                lstGeldgruppe.setModel( new MyComboBoxModelGrund(con, "SQLiteProbe") );
            } catch (SQLException ex) {
                Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
            }            
        }     
    }//GEN-LAST:event_rbtnAusgabeVerwaltActionPerformed

    private void rbtnEinnahmeVerwaltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEinnahmeVerwaltActionPerformed
            if(rbtnEinnahmeVerwalt.isSelected()){ 
            txtfldGeldgruppeInsert.setEditable(true);
            Connection con = SQLiteConnection.getConnection();            
            try {                
                lstGeldgruppe.setModel( new MyComboBoxModelGrund(con, "SQLiteProbe") );
            } catch (SQLException ex) {
                Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
            }            
        }
    }//GEN-LAST:event_rbtnEinnahmeVerwaltActionPerformed

    private void btnGeldGruppeLoeschenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeldGruppeLoeschenActionPerformed
        if(lstGeldgruppe.getSelectedValue()== null){
            txtfldGeldGruppeInfo.setText("Auswahl ist leer!");;
        }
        else{            
            try {
                Connection con = SQLiteConnection.getConnection();
                SqlBefehl.deleteGrund((String)lstGeldgruppe.getSelectedValue());
                lstGeldgruppe.setModel( new MyComboBoxModelGrund(con, "SQLiteProbe") );
                txtfldGeldGruppeInfo.setText("Ihr Datensatz wurde gelöscht!");                
            } catch (SQLException ex) {
              Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnGeldGruppeLoeschenActionPerformed

    private void btnGeldGruppeEinfuegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeldGruppeEinfuegenActionPerformed
        try {         
            Connection con = SQLiteConnection.getConnection();
            MyComboBoxModelGrund cbm = new MyComboBoxModelGrund(con, "SQLiteProbe");
            List name2 = Arrays.asList(cbm.grunden);
            if(txtfldGeldgruppeInsert.getText().isEmpty()){
                txtfldGeldgruppeInfo.setText("Feld darf nicht leer sein!");
            }
            if(name2.contains(txtfldGeldgruppeInsert.getText())){
                txtfldGeldgruppeInfo.setText("\""+txtfldGeldgruppeInsert.getText()+"\" existiert bereits!");
            }
            else{
//                try {
                    if(rbtnAusgabeVerwalt.isSelected()){
                        SqlBefehl.insertGrund(txtfldGeldgruppeInsert.getText(),"Ausgabe");                        
                    }
                    if(rbtnEinnahmeVerwalt.isSelected()){
                        SqlBefehl.insertGrund(txtfldGeldgruppeInsert.getText(),"Einnahme");
                        txtfldGeldgruppeInsert.setText("");
                    }
                    txtfldGeldgruppeInsert.setText("");
                    txtfldGeldgruppeInfo.setText("Ihr Datensatz wurde aufgenommen!");
                    lstGeldgruppe.setModel( new MyComboBoxModelGrund(con, "SQLiteProbe") );
//                } catch (SQLException ex) {
//                    Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
//                }    
            }
        } catch (SQLException ex) {
            Logger.getLogger(GUIBudget.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_btnGeldGruppeEinfuegenActionPerformed
    
//    private ArrayList<String> nameList(){
//        
//        return null;
//    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIBudget.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIBudget().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FIO;
    private javax.swing.JButton btnCraphRenew;
    private javax.swing.JButton btnGeldGruppeEinfuegen;
    private javax.swing.JButton btnGeldGruppeLoeschen;
    private javax.swing.JButton btnNameDelete;
    private javax.swing.JButton btnNameOK;
    private javax.swing.JButton btnSpeichern;
    private javax.swing.JButton btnTableAktual;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cmbxGrund;
    private javax.swing.JComboBox cmbxName;
    private javax.swing.JDialog createPerson;
    private javax.swing.JTextField fldBetrag;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JMenuItem jmiAusgabeDelete;
    private javax.swing.JMenuItem jmiAusgabeInsert;
    private javax.swing.JMenuItem jmiNameDelete;
    private javax.swing.JMenuItem jmiNameInsert;
    private javax.swing.JLabel lblBetrag;
    private javax.swing.JLabel lblCommentar;
    private javax.swing.JLabel lblDatum;
    private javax.swing.JLabel lblEuro;
    private javax.swing.JLabel lblGrund;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameInput;
    private javax.swing.JList listName;
    private javax.swing.JList lstGeldgruppe;
    private com.toedter.calendar.JDateChooser mydatechooser;
    private javax.swing.JPanel pnlAufgabAdd;
    private javax.swing.JPanel pnlAufgabDel;
    private javax.swing.JPanel pnlGeldfluss;
    private javax.swing.JPanel pnlGeldgruppen;
    private javax.swing.JPanel pnlGrafik;
    private javax.swing.JPanel pnlPerAdd;
    private javax.swing.JPanel pnlPerDel;
    private javax.swing.JPanel pnlPersonen;
    private javax.swing.JPanel pnlTable;
    protected static javax.swing.JRadioButton rbtnAusgabe;
    protected static javax.swing.JRadioButton rbtnAusgabeVerwalt;
    protected static javax.swing.JRadioButton rbtnEinnahme;
    protected static javax.swing.JRadioButton rbtnEinnahmeVerwalt;
    private javax.swing.JScrollPane scrpanCommentar;
    private javax.swing.JTextArea taCommentar;
    private javax.swing.JTextField txtErgebnis;
    private javax.swing.JTextField txtFldName;
    private javax.swing.JTextField txtFldNameErgebn;
    private javax.swing.JTextField txtFldNameResult;
    private javax.swing.JTextField txtfldGeldGruppeInfo;
    private javax.swing.JTextField txtfldGeldgruppeInfo;
    private javax.swing.JTextField txtfldGeldgruppeInsert;
    // End of variables declaration//GEN-END:variables
    //Variablen anfang    
}
